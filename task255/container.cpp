//------------------------------------------------------------------------------
// container_Constr.cpp - содержит функции обработки контейнера
//------------------------------------------------------------------------------

#include <iostream>
#include "container.h"

//------------------------------------------------------------------------------
// Инициализация контейнера
void Init(container &c) {
    c.len = 0;
}

//------------------------------------------------------------------------------
// Очистка контейнера от элементов (освобождение памяти)
void Clear(container &c) {
    for (int i = 0; i < c.len; i++) {
        DeleteShape(c.cont[i]);
    }
    c.len = 0;
}

//------------------------------------------------------------------------------
// Ввод содержимого контейнера из указанного потока
void In(container &c, ifstream &ifst) {
    while (!ifst.eof()) {
        if ((c.cont[c.len] = In(ifst)) != 0) {
            c.len++;
        }
    }
}

//------------------------------------------------------------------------------
// Случайный ввод содержимого контейнера
void InRnd(container &c, int size) {
    while (c.len < size) {
        if ((c.cont[c.len] = InRnd()) != nullptr) {
            c.len++;
        }
    }
}

//------------------------------------------------------------------------------
// Вывод содержимого контейнера в указанный поток
void Out(container &c, ofstream &ofst) {
    ofst << "Container contained " << c.len << " elements." << '\n';
    for (int i = 0; i < c.len; i++) {
        if (c.cont[i]->density != 0) {
            ofst << i << ": ";
            Out(*(c.cont[i]), ofst);
        }
    }
}

//------------------------------------------------------------------------------
// Вычисление суммы объёмов всех фигур в контейнере
void VolumeFilter(container &c) {
    double average = 0.0;
    for (int i = 0; i < c.len; i++) {
        average += Volume(*(c.cont[i]));
    }
    average /= c.len;
    for (int i = 0; i < c.len; i++) {
        if (Volume(*(c.cont[i])) < average) {
            c.cont[i]->density = 0;
        }
    }
}
